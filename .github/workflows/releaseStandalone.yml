name: Build and Release Standalone

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'


    - name: Publish Application
      run: dotnet publish FeshStandalone.fsproj -c release -r win-x64 -o bin/publish/net9 --framework net9.0-windows

    - name: Create Velopack Release
      run: |
        dotnet tool install -g vpk
        vpk download github --repoUrl https://github.com/goswinr/FeshTest
        vpk pack --packId FeshTest --packVersion ${{github.ref_name}} --packDir bin/publish/net9 --outputDir bin/installer/net9 --mainExe FeshTest.exe --framework net9.0-x64-desktop --icon Media/logoGray.ico        
        vpk upload github --repoUrl https://github.com/goswinr/FeshTest --outputDir bin/installer/net9 --publish --releaseName "Fesh ${{github.ref_name}}" --tag ${{github.ref_name}} --token ${{secrets.GITHUB_TOKEN}}






    # - name: Build
    #   run: dotnet test FeshStandalone.fsproj --configuration Release

    # - name: Get Changelog Entry
    #   id: changelog_reader
    #   uses: mindsers/changelog-reader-action@v2.2.3
    #   with:
    #     version: ${{ github.ref }}
    #     path: ./CHANGELOG.md


    # - name: Create GitHub Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
    #   with:
    #     tag_name: ${{ github.ref_name}}
    #     release_name: Fesh ${{ github.ref_name }}
    #     draft: false
    #     prerelease: false
    #     body: |
    #       To use the Fesh.exe in zip file you need to **unblock** the zip file before extracting.
    #       Alternatively you can use the Fesh.msi installer. No admin rights required.

    #       ## Changelog
    #       ${{ steps.changelog_reader.outputs.log_entry }}

    # - name: Upload Release Asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: bin/standalone/standalone.zip
    #     asset_name: standalone.zip
    #     asset_content_type: application/zip